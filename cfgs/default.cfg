[graph]
#gen = True, otherwise it tries to open the file with that name. Takes relative or full paths.
gen:cfgs/easy.lup

#Seed, != random means use this
seed:123526129312312312

####Black Square Rates####
#1 in # chance of choosing these (up to 1,000,000)
black0:15
black1:8
black2:11
black3:13
black4:15
#No requirement black square
black:7
#A collective area over about 250 causes considerable delays
x:10
y:10


[pop]
#Population Options
#Took his lecture to mean we're combining kids with parents in tournies
####Evolutionary Strategy (mu+lambda)-EA Parameters
#Initial Pop Size
mu:2500

#Offspring per generation
lambda:100

####Initilization Types
#True = Validity-Forced + Uniform Random
#False = Uniform Random
forcevalid:False

#####Mutation Parameters
#Chance of mutation, aka alpha
mutatealpha:4

####Parent Selection
#True = K-Tournament w/ Replacement
#False = Fitness Proportional Selection
parseltourn:True
#How big the tournament is
partsize:80

####Survival Selection
#True = Tournament Selection w/o Replacement (obs)
#False = Truncation, an automatic proportion is discared and replaced
surseltourn:True
#Tournament Size: this must be < lambda
sursize:40
#Truncation Amount: this culls some amount of the solutions. 'lambda' truncates to original pop size 
surtrunc:lambda


####Termination Type
# see main for term stuff

[log]
#Log filename, relative or absolute
result:result-log.txt
#Where we pump out the solution
solution:solution-log.txt
#Log headers, do we try to query git (1) or not (0)?
logh:0

[main]
#number of total runs to try
runs:1
#####Type of cap, set = to "0" to disable. One at a time
#number of Fitness Evaluations to run, max
fitevals:0
#generation cap
gens:0
#If best fitness doesn't increase within homogenity generations, end the run
homogenity:30
##############
#Ignore the black squares
ignoreblack:False
